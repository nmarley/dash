// Copyright (c) 2019 The Dash Core developers

#include <iostream>
using std::cout;
using std::endl;

#include "governance-classes.h"
#include "test/test_dash.h"

#include <boost/test/unit_test.hpp>

BOOST_FIXTURE_TEST_SUITE(governance_validators_tests, BasicTestingSetup)

BOOST_AUTO_TEST_CASE(detail_test)
{
    // Two triggers with the same block height and payment data, but ordered differently
    std::string strHexTrigger1 = "7b226576656e745f626c6f636b5f686569676874223a2037373539322c20227061796d656e745f616464726573736573223a202279565463397259445874637a426e38734d733335644c4239343545574471646259657c796376444a6b544b445553377047593544796b6e68686a4758324676714a626d4a747c79565143505a326b573646795067755572694b52524c754264315771476253675052222c20227061796d656e745f616d6f756e7473223a2022312e32333435363738397c332e31343135303030307c322e3030303030303030222c202270726f706f73616c5f686173686573223a2022616463616137393233363932316339366431623766666565346437653437346165323562613037643035613561643038366337366632313335626533636633327c373835346162336139653438343739333732653734396432323063336561623532356431636131323636386234656237383263623537653735353535373735617c36396438613632646663323838326264613964346666343938393634393136666432643761396464343439396362626630333131646633343430653834303135222c202274797065223a20327d";
    std::string strHexTrigger2 = "7b226576656e745f626c6f636b5f686569676874223a37373539322c2274797065223a322c227061796d656e745f616464726573736573223a2279565143505a326b573646795067755572694b52524c7542643157714762536750527c79565463397259445874637a426e38734d733335644c4239343545574471646259657c796376444a6b544b445553377047593544796b6e68686a4758324676714a626d4a74222c227061796d656e745f616d6f756e7473223a22322e30303030303030307c312e32333435363738397c332e3134313530303030222c2270726f706f73616c5f686173686573223a22363964386136326466633238383262646139643466663439383936343931366664326437613964643434393963626266303331316466333434306538343031357c616463616137393233363932316339366431623766666565346437653437346165323562613037643035613561643038366337366632313335626533636633327c37383534616233613965343834373933373265373439643232306333656162353235643163613132363638623465623738326362353765373535353537373561227d";

    // These two should produce the same "fingerprint", e.g. payload hash.
    CTriggerDetail triggerDeets1(strHexTrigger1);
    CTriggerDetail triggerDeets2(strHexTrigger2);

    std::cout << triggerDeets1.GetDataHexStr() << std::endl;
    std::cout << triggerDeets2.GetDataHexStr() << std::endl;

    std::cout << "The digest is: " << triggerDeets1.GetHash().ToString() << std::endl;

    BOOST_CHECK_EQUAL(triggerDeets1.GetHash().ToString(), triggerDeets2.GetHash().ToString());
}

BOOST_AUTO_TEST_SUITE_END()
